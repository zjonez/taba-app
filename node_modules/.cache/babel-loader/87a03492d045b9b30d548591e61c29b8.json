{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zjonez/tab-app/src/components/InputField.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nconst InputFieldStyle = styled.div`\n  @media (max-width: 768px) {\n    align-self: flex-end;\n  }\n`;\n_c = InputFieldStyle;\nconst ErrorMessage = styled.div`\n  color: #ff0000;\n`;\n_c2 = ErrorMessage;\nconst AddElement = styled.div`\n  display: flex;\n  & button {\n    flex-grow: 1;\n    margin-left: 8px;\n  }\n`;\n_c3 = AddElement;\nexport default function InputField(props) {\n  _s();\n\n  const {\n    onAdd\n  } = props;\n  const [value, setValue] = React.useState('');\n  const [errorMsg, setErrorMsg] = React.useState(null);\n\n  const handleOnChange = e => {\n    const {\n      value\n    } = e.target;\n    setValue(value);\n  };\n\n  const addItem = () => {\n    setErrorMsg(null);\n    validateName(value);\n  };\n\n  const validateName = name => {\n    let valid = true;\n\n    if (!name || name.replace(/\\s/g, '') === \"\") {\n      setErrorMsg(\"Name is required\");\n      valid = false;\n    } else if (name && name.length < 5) {\n      setErrorMsg(\"Name should have at least 5 characters\");\n      valid = false;\n    }\n\n    return valid;\n  };\n\n  const renderError = () => {\n    if (errorMsg) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputFieldStyle, {\n    children: [renderError(), /*#__PURE__*/_jsxDEV(AddElement, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => {\n          handleOnChange(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputField, \"ruswp917lir9Wl1xl8KFlb6XIBE=\");\n\n_c4 = InputField;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InputFieldStyle\");\n$RefreshReg$(_c2, \"ErrorMessage\");\n$RefreshReg$(_c3, \"AddElement\");\n$RefreshReg$(_c4, \"InputField\");","map":{"version":3,"sources":["/home/zjonez/tab-app/src/components/InputField.tsx"],"names":["React","styled","InputFieldStyle","div","ErrorMessage","AddElement","InputField","props","onAdd","value","setValue","useState","errorMsg","setErrorMsg","handleOnChange","e","target","addItem","validateName","name","valid","replace","length","renderError"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAMA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAI;AACnC;AACA;AACA;AACA,CAJA;KAAMD,e;AAMN,MAAME,YAAY,GAAGH,MAAM,CAACE,GAAI;AAChC;AACA,CAFA;MAAMC,Y;AAIN,MAAMC,UAAU,GAAGJ,MAAM,CAACE,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,U;AAQN,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA4C;AAAA;;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAA4B,EAA5B,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACW,QAAN,CAA8B,IAA9B,CAAhC;;AAEA,QAAMG,cAAc,GAAIC,CAAD,IAA0C;AAC/D,UAAM;AAAEN,MAAAA;AAAF,QAAYM,CAAC,CAACC,MAApB;AACAN,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMQ,OAAO,GAAG,MAAM;AACpBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,IAAAA,YAAY,CAACT,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMS,YAAY,GAAIC,IAAD,IAAkB;AACrC,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,CAACD,IAAD,IAASA,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,EAApB,MAA4B,EAAzC,EAA6C;AAC3CR,MAAAA,WAAW,CAAC,kBAAD,CAAX;AACAO,MAAAA,KAAK,GAAG,KAAR;AACD,KAHD,MAGO,IAAID,IAAI,IAAIA,IAAI,CAACG,MAAL,GAAc,CAA1B,EAA6B;AAClCT,MAAAA,WAAW,CAAC,wCAAD,CAAX;AACAO,MAAAA,KAAK,GAAG,KAAR;AACD;;AACD,WAAOA,KAAP;AACD,GAVD;;AAYA,QAAMG,WAAW,GAAG,MAAM;AACxB,QAAIX,QAAJ,EAAc;AACZ,0BACE,QAAC,YAAD;AAAA,kBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,GAND;;AAQA,sBACE,QAAC,eAAD;AAAA,eACGW,WAAW,EADd,eAEE,QAAC,UAAD;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEd,KAA1B;AAAiC,QAAA,QAAQ,EAAGM,CAAD,IAAO;AAChDD,UAAAA,cAAc,CAACC,CAAD,CAAd;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/CuBX,U;;MAAAA,U","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface InputFieldProps {\n  onAdd: (value: string) => void;\n}\n\nconst InputFieldStyle = styled.div`\n  @media (max-width: 768px) {\n    align-self: flex-end;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: #ff0000;\n`;\n\nconst AddElement = styled.div`\n  display: flex;\n  & button {\n    flex-grow: 1;\n    margin-left: 8px;\n  }\n`\n\nexport default function InputField(props: InputFieldProps) {\n  const { onAdd } = props;\n\n  const [value, setValue] = React.useState<string | ''>('');\n  const [errorMsg, setErrorMsg] = React.useState<string | null>(null);\n\n  const handleOnChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const { value } = e.target as HTMLInputElement;\n    setValue(value);\n  }\n\n  const addItem = () => {\n    setErrorMsg(null);\n    validateName(value);\n  }\n\n  const validateName = (name: string) => {\n    let valid = true;\n    if (!name || name.replace(/\\s/g, '') === \"\") {\n      setErrorMsg(\"Name is required\");\n      valid = false;\n    } else if (name && name.length < 5) {\n      setErrorMsg(\"Name should have at least 5 characters\");\n      valid = false;\n    }\n    return valid;\n  }\n\n  const renderError = () => {\n    if (errorMsg) {\n      return (\n        <ErrorMessage>{errorMsg}</ErrorMessage>\n      )\n    }\n  }\n\n  return (\n    <InputFieldStyle>\n      {renderError()}\n      <AddElement>\n        <input type=\"text\" value={value} onChange={(e) => {\n          handleOnChange(e);\n        }} />\n        <button onClick={addItem}>Add</button>\n      </AddElement>\n    </InputFieldStyle>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}